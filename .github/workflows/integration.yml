name: Development Integration

on:
  push:
    branches: ['main']

permissions:
  contents: read

jobs:

  check:
    name: Checks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17
      - name: Cache SonarQube packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: https://sonarqube.d.medcol.io
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=rerad-io_atlas-api_AYsbd52xttwOk7eq-KqM -DskipTests

  build:
    name: Build
    needs: ['check']
    uses: rerad-io/rerad-devops/.github/workflows/docker-image.yaml@main
    with:
      ECR_REPOSITORY: atlas-api
    secrets:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  deploy:
    name: Deploy
    needs: [ 'build' ]
    runs-on: dev-runner
    environment: development
    env:
      APP: atlas-api
      NAMESPACE: rerad-dev
      HELM_VERSION: 3.13.2
      HELM_EXPERIMENTAL_OCI: 1
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: install helm
        uses: Azure/setup-helm@v3
        with:
          version: ${{ env.HELM_VERSION }}
      - name: Set kubeconfig
        uses: azure/k8s-set-context@v3
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.KUBE_CONFIG_DATA }}
      - name: Upgrade helm release
        run: |
          helm upgrade ${{ env.APP }} --install ./helm --namespace ${{ env.NAMESPACE }} \
          --set image.tag=${{ github.sha }} \
          -f ./.helm/values.dev.yaml \
          --set image.tag=${{ github.sha }} \
          --set ingress.enabled=true \
          --set database.host=${{ secrets.POSTGRES_HOST }} \
          --set database.databaseName=${{ secrets.POSTGRES_NAME }} \
          --set database.password=${{ secrets.POSTGRES_PASSWORD }} \
          --debug \
          --wait